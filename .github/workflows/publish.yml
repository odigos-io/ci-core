name: Publish / Advance Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Semver tag (vMAJOR.MINOR.PATCH)"
        required: true
        type: string
      dry_run:
        description: "Validate only; don't push tags"
        required: false
        default: "false"
        type: choice
        options: ["false","true"]

permissions:
  contents: read  # we push with the App token; no need for write on GITHUB_TOKEN

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}
      DRY_RUN: ${{ github.event.inputs.dry_run }}

    steps:
      - name: Validate version input
        run: |
          if [[ ! "${VERSION}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Invalid version '${VERSION}'"; exit 1
          fi

      - name: Checkout main w/ full history & tags
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: false   # IMPORTANT: don't use GITHUB_TOKEN for pushes

      - name: Configure git identity (tag metadata)
        run: |
          git config user.name  "odigos-ci"
          git config user.email "odigos-ci@users.noreply.github.com"

      - name: Fail if version tag already exists
        run: |
          if git rev-parse "${VERSION}" >/dev/null 2>&1; then
            echo "::error::Tag ${VERSION} already exists"; exit 1
          fi

      - name: Create tags (local only)
        run: |
          git tag -a "${VERSION}" -m "Release ${VERSION}" HEAD
          if git rev-parse v1 >/dev/null 2>&1; then
            git tag -f -a v1 -m "Advance v1 -> ${VERSION}" HEAD
          else
            git tag -a v1 -m "Initial v1 -> ${VERSION}" HEAD
          fi

      - name: Get odigos-ci App token
        if: ${{ env.DRY_RUN != 'true' }}
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.ODIGOS_APP_ID }}
          private-key: ${{ secrets.ODIGOS_APP_PRIVATE_KEY }}
          # installation-id optional; auto-detect when running in installed repo

      - name: Push tags (App)
        if: ${{ env.DRY_RUN != 'true' }}
        env:
          GH_APP_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git remote set-url origin "https://x-access-token:${GH_APP_TOKEN}@github.com/odigos-io/ci-core.git"
          git push origin "${VERSION}"
          git push --force origin "v1"

      - name: Dry run summary
        if: ${{ env.DRY_RUN == 'true' }}
        run: |
          echo "Dry run only; not pushing ${VERSION} or v1."
