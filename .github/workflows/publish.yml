name: Publish / Advance Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Semver tag to create (e.g., v1.0.2). Must start with 'v'."
        required: true
        type: string
      dry_run:
        description: "Validate only; don't create/push tags."
        required: false
        default: "false"
        type: choice
        options: ["false","true"]

permissions:
  contents: write  # needed to push tags. Adjust if using a PAT instead.

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}
      DRY_RUN: ${{ github.event.inputs.dry_run }}

    steps:
      - name: Validate version input
        id: validate
        run: |
          if [[ -z "${VERSION}" ]]; then
            echo "::error::version is required"; exit 1
          fi
          if [[ ! "${VERSION}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::'${VERSION}' not SemVer vMAJOR.MINOR.PATCH"; exit 1
          fi

      - name: Checkout main w/ full history & tags
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          fetch-tags: true

      - name: Configure git identity
        run: |
          git config user.name  "odigos-ci-bot"
          git config user.email "ci@odigos.io"

      - name: Fail if version tag already exists
        run: |
          if git rev-parse "${VERSION}" >/dev/null 2>&1; then
            echo "::error::Tag ${VERSION} already exists. Aborting."; exit 1
          fi

      - name: Show current HEAD & existing v1 tag
        run: |
          echo "HEAD: $(git rev-parse HEAD)"
          git show-ref --tags | grep -E 'refs/tags/v1$' || echo "No v1 tag yet."

      - name: Create tags (local only)
        if: ${{ env.DRY_RUN != 'true' }}
        run: |
          git tag -a "${VERSION}" -m "Release ${VERSION} (run ${GITHUB_RUN_ID})" HEAD
          if git rev-parse v1 >/dev/null 2>&1; then
            git tag -f -a v1 -m "Advance v1 -> ${VERSION} (run ${GITHUB_RUN_ID})" HEAD
          else
            git tag -a v1 -m "Initial v1 -> ${VERSION} (run ${GITHUB_RUN_ID})" HEAD
          fi

      - name: Dry-run show would-be tags
        if: ${{ env.DRY_RUN == 'true' }}
        run: |
          echo "Dry run: no tags created. Would have created ${VERSION} and moved v1."
          echo "HEAD to tag: $(git rev-parse HEAD)"

      - name: Push tags
        if: ${{ env.DRY_RUN != 'true' }}
        run: |
          git push origin "${VERSION}"
          git push --force origin "v1"
